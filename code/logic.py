from telebot import TeleBot, types 
import sqlite3
from config import *
import os
import time
from datetime import datetime, timedelta

bot = TeleBot(token)

class DB_Manager:
    def __init__(self, database):
        self.database = database
        self.conn = sqlite3.connect(self.database, check_same_thread=False)
    
    def create_tables(self):
        with self.conn:
            self.conn.execute("""CREATE TABLE IF NOT EXISTS users(
                             id INTEGER PRIMARY KEY,
                             username TEXT,
                             user_id TEXT UNIQUE,
                             gold INTEGER DEFAULT 0,
                             wood INTEGER DEFAULT 0,
                             stone INTEGER DEFAULT 0,
                             story INTEGER DEFAULT 0)
                             """)
    def select_user(self, message):
       user_id = message.chat.id
       with self.conn:
        cur = self.conn.cursor()
        cur.execute("SELECT * FROM USERS WHERE user_id = ?", (user_id,))
        user = cur.fetchone()
       return user

    def start(self, message):
        user_id = message.chat.id
        username = message.from_user.username or "Anonymous"
        with self.conn:
           cur = self.conn.cursor()
           cur.execute("SELECT * FROM USERS WHERE user_id = ?", (user_id,))
           user = cur.fetchone()
           
           if user is None:
              gold = 0
              wood = 0
              stone = 0
              story = 0
              cur.execute('''INSERT INTO users (user_id, username, gold, wood, stone, story) VALUES (?, ?, ?, ?, ?, ?)''', (user_id, username, gold, wood, stone, story))
              bot.send_message(user_id, "–î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω –î–º–∏—Ç—Ä–∏–µ–º –ì–æ—Ä—Å–∫–∏–º –∏ –†–æ–¥–∏–æ–Ω–æ–º –ö—É–Ω–¥—è–Ω–æ–∫")
              video_path = "C:\\Users\\Admin\\OneDrive\\Desktop\\simulator\\images\\vstuplenie.mp4"
              bot.send_message(user_id, "–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")
              bot.send_chat_action(user_id, "upload_video")
            
              time.sleep(1.5)
    
              if os.path.exists(video_path):
               with open(video_path, "rb") as f:
                bot.send_video(user_id, f, timeout=120)
              else:
               bot.send_message(user_id, "–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ö–æ—Ä–æ—á–µ –±–µ–∑ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è :(") 
        
              time.sleep(2)
            
           elif user is not None:
              pass

    def story_0(self, message):
       
       user_id = message.chat.id
       user = self.select_user(message)
       bot.send_message(user_id, """*–ë–æ–≥:* –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —Å—ã–Ω –º–æ–π –±–æ–∂–∏–π. 
                        –¢—ã –æ–¥–∏–Ω –∏–∑ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö, –∫–æ–º—É —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∂–∏—Ç—å
                        —ç—Ç–æ –Ω–µ—Å—á–∞—Å—Ç—å–µ.""", parse_mode="Markdown")
       time.sleep(2.5)
       bot.send_message(user_id,"""*–ë–æ–≥:* –ù—É —á—Ç–æ-–∂–µ, –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–≥—Ä–∞–∂—É –∫–∞ 
                        —è —Ç–µ–±—è –∫–∞–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞–º–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Å–µ–π—á–∞—Å
                        –æ—á–µ–Ω—å –Ω—É–∂–¥–∞–µ—à—å—Å—è, –¥–µ—Ä–∂–∏ 10 –∫—É—Å–æ—á–∫–æ–≤ –∑–æ–ª–æ—Ç–∞üèÖ, 20 –∫—É—Å–∫–æ–≤ 
                        –¥–µ—Ä–µ–≤–∞ü™µ –∏ 20 –∫–∞–º–Ω–µ–πü™®, —Å –Ω–∏–º–∏ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ—Å—Ç—Ä–æ–π 
                        —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –¥–æ–º""", parse_mode="Markdown") 
       time.sleep(2)
       with self.conn:
          cur = self.conn.cursor()
          cur.execute("""
            UPDATE users SET gold = gold + 10, wood = wood + 20, stone = stone + 20, story = 1 
            WHERE user_id = ?
        """, (user_id,))    
       bot.send_message(user_id, "<i>–í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–Ω–æ:</i> +20üèÖ, +20ü™µ, +20ü™®", parse_mode="HTML")  
      
       bot.send_message(user_id, """*–ë–æ–≥:* –°–∫–æ—Ä–æ —Ç—ã –ø–æ—Å—Ç—Ä–æ–∏—à—å —Å–µ–±–µ –Ω–æ–≤—ã–π –¥–æ–º,
                        –Ω–æ —Å–Ω–∞—á–∞–ª–∞, –∏–¥–∏ –∫–∞ —Ç—ã –Ω–∞ –æ—Ö–æ—Ç—É, 
                        —Ç—ã –æ—á–µ–Ω—å –≥–æ–ª–æ–¥–Ω—ã–π, —Ç–µ–±–µ —Å—Ç–æ–∏–ª–æ –±—ã –ø–æ–µ—Å—Ç—å, 
                        –ø–æ—ç—Ç–æ–º—É –Ω–∞–∂–º–∏ –≤ –º–µ–Ω—é –Ω–∞ –∫–Ω–æ–ø–∫—É *–û—Ö–æ—Ç–∞*, 
                        —á—Ç–æ–±—ã –¥–æ–±—ã—Ç—å –µ–¥—ã""", parse_mode="Markdown")
       # Ich soll den Markdown Ohota erstellen und dort  2 bis 5 Tiere jagen,
       # jedes Tier gibt mir bestimmte Anzahl an Punkten die dann alle 
       # zusammen summiert werden ---> noch eine Tabelle erstellen (Zweri)
       #Er soll ungef√§hr so aussehen:
       #Ihre Beute:
       # () Krolikov
       # () Volkov
       # () Kasul
       # ...
       # Ich soll au√üerdem ein cooldown f√ºr die Jagd erstellen
       # Ich muss den Gottes Text an die richtigen Zeilen setzen
       # Profil soll auch angezeigt werden
       

             

              

                

